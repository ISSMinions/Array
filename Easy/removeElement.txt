Description:
Given an array and a value, remove all instances of that value in-place and return the new length.
Do not allocate extra space for another array, you must do this by modifying the input array in-place with O(1) extra memory.
The order of elements can be changed. It doesn't matter what you leave beyond the new length.

Example:
Given nums = [3,2,2,3], val = 3,

Your function should return length = 2, with the first two elements of nums being 2.

Solution:
import java.util.ArrayList;
class Solution {
    public int removeElement(int[] nums, int val) {
        ArrayList<Integer> array = new ArrayList<Integer>();
        for(int i=0;i<nums.length;i++) {
        	array.add(nums[i]);
        }
        while(array.contains(val)) {
        	array.remove((Object)val);
        }
        for(int i=0;i<array.size();i++) {
        	nums[i]=array.get(i);
        }
        return array.size();
    }
}